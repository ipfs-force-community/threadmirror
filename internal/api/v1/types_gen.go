// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package v1

import (
	"time"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// BotStats defines model for BotStats.
type BotStats struct {
	// CheckInterval Bot's check interval (e.g., "5m0s")
	CheckInterval string `json:"check_interval"`

	// Enabled Whether the bot is enabled
	Enabled bool `json:"enabled"`

	// ProcessedCount Number of mentions processed
	ProcessedCount int `json:"processed_count"`

	// Username Bot's Twitter username
	Username *string `json:"username"`
}

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code int32 `json:"code"`

	// Message Error message
	Message string `json:"message"`
}

// PaginationMeta defines model for PaginationMeta.
type PaginationMeta struct {
	// Limit Maximum number of items returned
	Limit int `json:"limit"`

	// Offset Number of items skipped
	Offset int `json:"offset"`

	// Total Total number of items
	Total int `json:"total"`
}

// Post defines model for Post.
type Post struct {
	// Content Post text content
	Content string `json:"content"`

	// CreatedAt Post creation timestamp
	CreatedAt time.Time `json:"created_at"`

	// Id Post unique identifier
	Id string `json:"id"`

	// Images Post images
	Images []struct {
		// ImageId Image ID
		ImageId string `json:"image_id"`
	} `json:"images"`

	// UpdatedAt Post last update timestamp
	UpdatedAt time.Time `json:"updated_at"`
}

// PostDetails defines model for PostDetails.
type PostDetails struct {
	// Content Post text content
	Content string `json:"content"`

	// CreatedAt Post creation timestamp
	CreatedAt time.Time `json:"created_at"`

	// Id Post unique identifier
	Id string `json:"id"`

	// Images Post images
	Images []struct {
		// ImageId Image ID
		ImageId string `json:"image_id"`
	} `json:"images"`

	// UpdatedAt Post last update timestamp
	UpdatedAt time.Time `json:"updated_at"`
}

// PageLimit defines model for PageLimit.
type PageLimit = int

// PageOffset defines model for PageOffset.
type PageOffset = int

// InternalServerError defines model for InternalServerError.
type InternalServerError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// GetPostsParams defines parameters for GetPosts.
type GetPostsParams struct {
	// Limit Maximum number of items to return
	Limit *PageLimit `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Number of items to skip
	Offset *PageOffset `form:"offset,omitempty" json:"offset,omitempty"`
}

func (p *GetPostsParams) GetLimit() *PageLimit   { return p.Limit }
func (p *GetPostsParams) GetOffset() *PageOffset { return p.Offset }
