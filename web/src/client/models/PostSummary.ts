/* tslint:disable */
/* eslint-disable */
/**
 * Threadmirror Backend API
 * API for managing user profiles and follows
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PostAuthor } from './PostAuthor';
import {
    PostAuthorFromJSON,
    PostAuthorFromJSONTyped,
    PostAuthorToJSON,
    PostAuthorToJSONTyped,
} from './PostAuthor';

/**
 * 
 * @export
 * @interface PostSummary
 */
export interface PostSummary {
    /**
     * Post unique identifier
     * @type {string}
     * @memberof PostSummary
     */
    id: string;
    /**
     * Post content preview/summary
     * @type {string}
     * @memberof PostSummary
     */
    contentPreview: string;
    /**
     * 
     * @type {PostAuthor}
     * @memberof PostSummary
     */
    author?: PostAuthor;
    /**
     * Post creation timestamp
     * @type {Date}
     * @memberof PostSummary
     */
    createdAt: Date;
    /**
     * Number of tweets in the thread
     * @type {number}
     * @memberof PostSummary
     */
    numTweets: number;
}

/**
 * Check if a given object implements the PostSummary interface.
 */
export function instanceOfPostSummary(value: object): value is PostSummary {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('contentPreview' in value) || value['contentPreview'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('numTweets' in value) || value['numTweets'] === undefined) return false;
    return true;
}

export function PostSummaryFromJSON(json: any): PostSummary {
    return PostSummaryFromJSONTyped(json, false);
}

export function PostSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'contentPreview': json['content_preview'],
        'author': json['author'] == null ? undefined : PostAuthorFromJSON(json['author']),
        'createdAt': (new Date(json['created_at'])),
        'numTweets': json['numTweets'],
    };
}

export function PostSummaryToJSON(json: any): PostSummary {
    return PostSummaryToJSONTyped(json, false);
}

export function PostSummaryToJSONTyped(value?: PostSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'content_preview': value['contentPreview'],
        'author': PostAuthorToJSON(value['author']),
        'created_at': ((value['createdAt']).toISOString()),
        'numTweets': value['numTweets'],
    };
}

