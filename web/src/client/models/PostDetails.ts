/* tslint:disable */
/* eslint-disable */
/**
 * Threadmirror Backend API
 * API for managing user profiles and follows
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PostAuthor } from './PostAuthor';
import {
    PostAuthorFromJSON,
    PostAuthorFromJSONTyped,
    PostAuthorToJSON,
    PostAuthorToJSONTyped,
} from './PostAuthor';

/**
 * 
 * @export
 * @interface PostDetails
 */
export interface PostDetails {
    /**
     * Post unique identifier
     * @type {string}
     * @memberof PostDetails
     */
    id: string;
    /**
     * Full post content
     * @type {string}
     * @memberof PostDetails
     */
    content: string;
    /**
     * 
     * @type {PostAuthor}
     * @memberof PostDetails
     */
    author?: PostAuthor;
    /**
     * Post creation timestamp
     * @type {Date}
     * @memberof PostDetails
     */
    createdAt: Date;
    /**
     * Post last update timestamp
     * @type {Date}
     * @memberof PostDetails
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the PostDetails interface.
 */
export function instanceOfPostDetails(value: object): value is PostDetails {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function PostDetailsFromJSON(json: any): PostDetails {
    return PostDetailsFromJSONTyped(json, false);
}

export function PostDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'content': json['content'],
        'author': json['author'] == null ? undefined : PostAuthorFromJSON(json['author']),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function PostDetailsToJSON(json: any): PostDetails {
    return PostDetailsToJSONTyped(json, false);
}

export function PostDetailsToJSONTyped(value?: PostDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'content': value['content'],
        'author': PostAuthorToJSON(value['author']),
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

