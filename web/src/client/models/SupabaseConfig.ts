/* tslint:disable */
/* eslint-disable */
/**
 * Threadmirror Backend API
 * API for managing user profiles and follows
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SupabaseConfigBucketNames } from './SupabaseConfigBucketNames';
import {
    SupabaseConfigBucketNamesFromJSON,
    SupabaseConfigBucketNamesFromJSONTyped,
    SupabaseConfigBucketNamesToJSON,
    SupabaseConfigBucketNamesToJSONTyped,
} from './SupabaseConfigBucketNames';

/**
 * 
 * @export
 * @interface SupabaseConfig
 */
export interface SupabaseConfig {
    /**
     * Supabase project reference ID
     * @type {string}
     * @memberof SupabaseConfig
     */
    projectReference: string;
    /**
     * Supabase anonymous API key
     * @type {string}
     * @memberof SupabaseConfig
     */
    apiAnnoKey: string;
    /**
     * 
     * @type {SupabaseConfigBucketNames}
     * @memberof SupabaseConfig
     */
    bucketNames: SupabaseConfigBucketNames;
}

/**
 * Check if a given object implements the SupabaseConfig interface.
 */
export function instanceOfSupabaseConfig(value: object): value is SupabaseConfig {
    if (!('projectReference' in value) || value['projectReference'] === undefined) return false;
    if (!('apiAnnoKey' in value) || value['apiAnnoKey'] === undefined) return false;
    if (!('bucketNames' in value) || value['bucketNames'] === undefined) return false;
    return true;
}

export function SupabaseConfigFromJSON(json: any): SupabaseConfig {
    return SupabaseConfigFromJSONTyped(json, false);
}

export function SupabaseConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): SupabaseConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'projectReference': json['project_reference'],
        'apiAnnoKey': json['api_anno_key'],
        'bucketNames': SupabaseConfigBucketNamesFromJSON(json['bucket_names']),
    };
}

export function SupabaseConfigToJSON(json: any): SupabaseConfig {
    return SupabaseConfigToJSONTyped(json, false);
}

export function SupabaseConfigToJSONTyped(value?: SupabaseConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'project_reference': value['projectReference'],
        'api_anno_key': value['apiAnnoKey'],
        'bucket_names': SupabaseConfigBucketNamesToJSON(value['bucketNames']),
    };
}

