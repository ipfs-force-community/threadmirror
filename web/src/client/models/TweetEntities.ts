/* tslint:disable */
/* eslint-disable */
/**
 * Threadmirror Backend API
 * API for managing user profiles and follows
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MediaInfo } from './MediaInfo';
import {
    MediaInfoFromJSON,
    MediaInfoFromJSONTyped,
    MediaInfoToJSON,
    MediaInfoToJSONTyped,
} from './MediaInfo';

/**
 * 
 * @export
 * @interface TweetEntities
 */
export interface TweetEntities {
    /**
     * Hashtags in the tweet
     * @type {Array<object>}
     * @memberof TweetEntities
     */
    hashtags: Array<object>;
    /**
     * Financial symbols in the tweet
     * @type {Array<object>}
     * @memberof TweetEntities
     */
    symbols: Array<object>;
    /**
     * URLs in the tweet
     * @type {Array<object>}
     * @memberof TweetEntities
     */
    urls: Array<object>;
    /**
     * User mentions in the tweet
     * @type {Array<object>}
     * @memberof TweetEntities
     */
    userMentions: Array<object>;
    /**
     * Media attachments
     * @type {Array<MediaInfo>}
     * @memberof TweetEntities
     */
    media?: Array<MediaInfo> | null;
}

/**
 * Check if a given object implements the TweetEntities interface.
 */
export function instanceOfTweetEntities(value: object): value is TweetEntities {
    if (!('hashtags' in value) || value['hashtags'] === undefined) return false;
    if (!('symbols' in value) || value['symbols'] === undefined) return false;
    if (!('urls' in value) || value['urls'] === undefined) return false;
    if (!('userMentions' in value) || value['userMentions'] === undefined) return false;
    return true;
}

export function TweetEntitiesFromJSON(json: any): TweetEntities {
    return TweetEntitiesFromJSONTyped(json, false);
}

export function TweetEntitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): TweetEntities {
    if (json == null) {
        return json;
    }
    return {
        
        'hashtags': json['hashtags'],
        'symbols': json['symbols'],
        'urls': json['urls'],
        'userMentions': json['user_mentions'],
        'media': json['media'] == null ? undefined : ((json['media'] as Array<any>).map(MediaInfoFromJSON)),
    };
}

export function TweetEntitiesToJSON(json: any): TweetEntities {
    return TweetEntitiesToJSONTyped(json, false);
}

export function TweetEntitiesToJSONTyped(value?: TweetEntities | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'hashtags': value['hashtags'],
        'symbols': value['symbols'],
        'urls': value['urls'],
        'user_mentions': value['userMentions'],
        'media': value['media'] == null ? undefined : ((value['media'] as Array<any>).map(MediaInfoToJSON)),
    };
}

