/* tslint:disable */
/* eslint-disable */
/**
 * Threadmirror Backend API
 * API for managing user profiles and follows
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BotStats
 */
export interface BotStats {
    /**
     * Whether the bot is enabled
     * @type {boolean}
     * @memberof BotStats
     */
    enabled: boolean;
    /**
     * Bot's Twitter username
     * @type {string}
     * @memberof BotStats
     */
    username?: string | null;
    /**
     * Bot's check interval (e.g., "5m0s")
     * @type {string}
     * @memberof BotStats
     */
    checkInterval: string;
    /**
     * Number of mentions processed
     * @type {number}
     * @memberof BotStats
     */
    processedCount: number;
}

/**
 * Check if a given object implements the BotStats interface.
 */
export function instanceOfBotStats(value: object): value is BotStats {
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    if (!('checkInterval' in value) || value['checkInterval'] === undefined) return false;
    if (!('processedCount' in value) || value['processedCount'] === undefined) return false;
    return true;
}

export function BotStatsFromJSON(json: any): BotStats {
    return BotStatsFromJSONTyped(json, false);
}

export function BotStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BotStats {
    if (json == null) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
        'username': json['username'] == null ? undefined : json['username'],
        'checkInterval': json['check_interval'],
        'processedCount': json['processed_count'],
    };
}

export function BotStatsToJSON(json: any): BotStats {
    return BotStatsToJSONTyped(json, false);
}

export function BotStatsToJSONTyped(value?: BotStats | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'enabled': value['enabled'],
        'username': value['username'],
        'check_interval': value['checkInterval'],
        'processed_count': value['processedCount'],
    };
}

