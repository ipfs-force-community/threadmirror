/* tslint:disable */
/* eslint-disable */
/**
 * Threadmirror Backend API
 * API for managing user profiles and follows
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ThreadDetail } from './ThreadDetail';
import {
    ThreadDetailFromJSON,
    ThreadDetailFromJSONTyped,
    ThreadDetailToJSON,
    ThreadDetailToJSONTyped,
} from './ThreadDetail';

/**
 * 
 * @export
 * @interface ThreadScrapePost409Response
 */
export interface ThreadScrapePost409Response {
    /**
     * 
     * @type {ThreadDetail}
     * @memberof ThreadScrapePost409Response
     */
    data: ThreadDetail;
    /**
     * Message indicating thread already exists
     * @type {string}
     * @memberof ThreadScrapePost409Response
     */
    message: string;
}

/**
 * Check if a given object implements the ThreadScrapePost409Response interface.
 */
export function instanceOfThreadScrapePost409Response(value: object): value is ThreadScrapePost409Response {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function ThreadScrapePost409ResponseFromJSON(json: any): ThreadScrapePost409Response {
    return ThreadScrapePost409ResponseFromJSONTyped(json, false);
}

export function ThreadScrapePost409ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThreadScrapePost409Response {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ThreadDetailFromJSON(json['data']),
        'message': json['message'],
    };
}

export function ThreadScrapePost409ResponseToJSON(json: any): ThreadScrapePost409Response {
    return ThreadScrapePost409ResponseToJSONTyped(json, false);
}

export function ThreadScrapePost409ResponseToJSONTyped(value?: ThreadScrapePost409Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ThreadDetailToJSON(value['data']),
        'message': value['message'],
    };
}

