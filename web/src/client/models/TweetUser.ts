/* tslint:disable */
/* eslint-disable */
/**
 * Threadmirror Backend API
 * API for managing user profiles and follows
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TweetUser
 */
export interface TweetUser {
    /**
     * User unique identifier
     * @type {string}
     * @memberof TweetUser
     */
    id: string;
    /**
     * User REST API identifier
     * @type {string}
     * @memberof TweetUser
     */
    restId: string;
    /**
     * User display name
     * @type {string}
     * @memberof TweetUser
     */
    name: string;
    /**
     * User screen name (without @)
     * @type {string}
     * @memberof TweetUser
     */
    screenName: string;
    /**
     * User profile image URL
     * @type {string}
     * @memberof TweetUser
     */
    profileImageUrl: string;
    /**
     * User bio/description
     * @type {string}
     * @memberof TweetUser
     */
    description: string;
    /**
     * Number of followers
     * @type {number}
     * @memberof TweetUser
     */
    followersCount: number;
    /**
     * Number of following
     * @type {number}
     * @memberof TweetUser
     */
    friendsCount: number;
    /**
     * Number of tweets
     * @type {number}
     * @memberof TweetUser
     */
    statusesCount: number;
    /**
     * User account creation timestamp
     * @type {Date}
     * @memberof TweetUser
     */
    createdAt: Date;
    /**
     * Whether user is verified
     * @type {boolean}
     * @memberof TweetUser
     */
    verified: boolean;
    /**
     * Whether user has blue verification
     * @type {boolean}
     * @memberof TweetUser
     */
    isBlueVerified: boolean;
}

/**
 * Check if a given object implements the TweetUser interface.
 */
export function instanceOfTweetUser(value: object): value is TweetUser {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('restId' in value) || value['restId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('screenName' in value) || value['screenName'] === undefined) return false;
    if (!('profileImageUrl' in value) || value['profileImageUrl'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('followersCount' in value) || value['followersCount'] === undefined) return false;
    if (!('friendsCount' in value) || value['friendsCount'] === undefined) return false;
    if (!('statusesCount' in value) || value['statusesCount'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('verified' in value) || value['verified'] === undefined) return false;
    if (!('isBlueVerified' in value) || value['isBlueVerified'] === undefined) return false;
    return true;
}

export function TweetUserFromJSON(json: any): TweetUser {
    return TweetUserFromJSONTyped(json, false);
}

export function TweetUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): TweetUser {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'restId': json['rest_id'],
        'name': json['name'],
        'screenName': json['screen_name'],
        'profileImageUrl': json['profile_image_url'],
        'description': json['description'],
        'followersCount': json['followers_count'],
        'friendsCount': json['friends_count'],
        'statusesCount': json['statuses_count'],
        'createdAt': (new Date(json['created_at'])),
        'verified': json['verified'],
        'isBlueVerified': json['is_blue_verified'],
    };
}

export function TweetUserToJSON(json: any): TweetUser {
    return TweetUserToJSONTyped(json, false);
}

export function TweetUserToJSONTyped(value?: TweetUser | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'rest_id': value['restId'],
        'name': value['name'],
        'screen_name': value['screenName'],
        'profile_image_url': value['profileImageUrl'],
        'description': value['description'],
        'followers_count': value['followersCount'],
        'friends_count': value['friendsCount'],
        'statuses_count': value['statusesCount'],
        'created_at': ((value['createdAt']).toISOString()),
        'verified': value['verified'],
        'is_blue_verified': value['isBlueVerified'],
    };
}

